/*
 * Copyright 2010 eviware software ab
 * 
 * Licensed under the EUPL, Version 1.1 or - as soon they will be approved by the European Commission - subsequent
 * versions of the EUPL (the "Licence");
 * You may not use this work except in compliance with the Licence.
 * You may obtain a copy of the Licence at:
 * 
 * http://ec.europa.eu/idabc/eupl5
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under the Licence is
 * distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the Licence for the specific language governing permissions and limitations
 * under the Licence.
 */
package com.eviware.loadui.api.ui.toolbar;

import java.util.Collection;

/**
 * The toolbar should keep track of which groups and items it contains, as well as their position
 * 
 * @author nenad.ristic
 * 
 */
public interface LoadUIToolbarModel
{
	/**
	 * The group should define what items it contains, as well as its own name and id
	 * If an id is not specified, it should be generated by the implementing class. 
	 * 	(possibly using the name of th group, if present)
	 * If the id already exists, it will throw an exception
	 * If there is no name, the id will be used
	 * 
	 * @param group
	 * 
	 * @return The id of the group, either generated or provided when the group is added
	 */
	String addGroup(ToolbarGroup group);
	
	/**
	 * Removes a group, should throw an exceptio of some sort if the group does not exist.
	 * 
	 * @param groupId
	 * 
	 */
	void removeGroup(String groupId);
	
	/**
	 * Creates a group containing a single item, the group will have the same name and id as the item.
	 * 
	 * @param item The item to use to generate the group
	 * 
	 * @return The resulting group
	 * 
	 */
	ToolbarGroup addGroupFromItem(ToolbarItem item);
	
	/**
	 * Returns a group with the specified id, or null if the group does not exist
	 * 
	 * @param groupId
	 * 
	 * @return The group, or null if it does not exist
	 */
	ToolbarGroup getGroup(String groupId);
	
	/**
	 * Retrieve the list of all groups currently on the toolbar
	 * 
	 * @return The full list of groups
	 */
	Collection<ToolbarGroup> getGroupList();
	
	/**
	 * @return Is the toolbar currently visible
	 */
	boolean isHidden();
}
