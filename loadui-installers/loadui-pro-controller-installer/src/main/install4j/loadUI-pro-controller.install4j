<?xml version="1.0" encoding="UTF-8"?>
<install4j version="5.1.5" transformSequenceNumber="4">
  <directoryPresets config="${compiler:builddir}" />
  <application name="LoadUI Pro ${compiler:version}" distributionSourceDir="" applicationId="3648-6792-9261-9102" mediaDir="../../../target" mediaFilePattern="${compiler:sys.shortName}_${compiler:sys.platform}_${compiler:sys.version}" compression="6" lzmaCompression="false" pack200Compression="false" excludeSignedFromPacking="true" commonExternalFiles="false" createMd5Sums="true" shrinkRuntime="true" shortName="LoadUI" publisher="SmartBear Software" publisherWeb="http://www.smartbear.com" version="${compiler:version}" allPathsRelative="true" backupOnSave="false" autoSave="false" convertDotsToUnderscores="false" macSignature="????" installerName="" javaMinVersion="1.6" javaMaxVersion="" allowBetaVM="false" jdkMode="runtimeJre" jdkName="">
    <languages skipLanguageSelection="false" languageSelectionInPrincipalLanguage="false">
      <principalLanguage id="en" customLocalizationFile="" />
      <additionalLanguages />
    </languages>
    <searchSequence>
      <registry />
      <envVar name="JAVA_HOME" />
      <envVar name="JDK_HOME" />
    </searchSequence>
    <variables>
      <variable name="version" value="" description="" category="" />
      <variable name="proxy" value="" description="" category="" />
      <variable name="port" value="" description="" category="" />
    </variables>
    <mergedProjects />
    <codeSigning macEnabled="false" macPkcs12File="" windowsEnabled="false" windowsKeySource="pvkAndSpc" windowsPvkFile="" windowsSpcFile="" windowsPkcs12File="" />
  </application>
  <files keepModificationTimes="false" missingFilesStrategy="warn" globalExcludeSuffixes="" defaultOverwriteMode="4" defaultUninstallMode="0" launcherOverwriteMode="3" defaultFileMode="644" defaultDirMode="755">
    <filesets />
    <roots />
    <mountPoints>
      <mountPoint id="20" root="" location="" mode="755" />
    </mountPoints>
    <entries>
      <dirEntry mountPoint="20" file="${compiler:builddir}" overwriteMode="5" shared="false" fileMode="644" uninstallMode="0" overrideFileMode="true" overrideOverwriteMode="true" overrideUninstallMode="true" entryMode="direct" subDirectory="" excludeSuffixes="" dirMode="755" overrideDirMode="true">
        <exclude>
          <entry location="felix-cache" fileType="regular" />
        </exclude>
      </dirEntry>
    </entries>
    <components />
  </files>
  <launchers>
    <launcher name="LoadUI Pro" id="1014" customizedId="" external="false" excludeFromMenu="false" unixMode="755" menuName="" icnsFile="${compiler:resourcedir}/loadUI_icon_mac.icns" customMacBundleIdentifier="false" macBundleIdentifier="" swtApp="false" fileset="" macBundleBinary="JavaApplicationStub" addMacEntitlements="false" macEntitlementsFile="">
      <executable name="LoadUI-Pro-${compiler:version}" type="1" iconSet="true" iconFile="${compiler:resourcedir}/loadUI_icon_win.ico" executableDir="." redirectStderr="true" stderrFile="error.log" stderrMode="overwrite" redirectStdout="false" stdoutFile="output.log" stdoutMode="overwrite" failOnStderrOutput="true" executableMode="1" changeWorkingDirectory="true" workingDirectory="." singleInstance="false" serviceStartType="2" serviceDependencies="" serviceDescription="" jreLocation="" executionLevel="asInvoker" checkConsoleParameter="false" globalSingleInstance="false">
        <versionInfo include="false" fileVersion="" fileDescription="" legalCopyright="" internalName="" productName="" />
      </executable>
      <splashScreen show="false" autoOff="true" alwaysOnTop="true" width="0" height="0" bitmapFile="" java6SplashScreen="false">
        <text>
          <statusLine x="20" y="20" text="" font="Arial" fontSize="8" fontColor="0,0,0" fontWeight="500" />
          <versionLine x="20" y="40" text="version ${compiler:sys.version}" font="Arial" fontSize="8" fontColor="0,0,0" fontWeight="500" />
        </text>
      </splashScreen>
      <java mainClass="com.javafx.main.Main" vmParameters="-Xms128m -Xmx768m -XX:MaxPermSize=128m" arguments="--nofx=false" allowVMPassthroughParameters="true" preferredVM="" bundleRuntime="true">
        <classPath>
          <scanDirectory location="lib" failOnError="false" />
          <archive location="jre/lib/jfxrt.jar" failOnError="false" />
        </classPath>
        <nativeLibraryDirectories />
      </java>
      <includedFiles />
      <unextractableFiles />
      <vmOptionsFile mode="none" overwriteMode="0" fileMode="644">
        <content />
      </vmOptionsFile>
      <customScript mode="1" file="">
        <content />
      </customScript>
      <infoPlist mode="1" file="">
        <content />
      </infoPlist>
      <iconImageFiles>
        <file path="${compiler:resourcedir}/loadui-logo-icon-16.png" />
        <file path="${compiler:resourcedir}/loadui-logo-icon-32.png" />
      </iconImageFiles>
    </launcher>
  </launchers>
  <installerGui installerType="1" addOnAppId="" suggestPreviousLocations="false" autoUpdateDescriptorUrl="" useAutoUpdateBaseUrl="false" autoUpdateBaseUrl="">
    <customCode />
    <autoUpdate useMinUpdatableVersion="false" minUpdatableVersion="" useMaxUpdatableVersion="false" maxUpdatableVersion="">
      <commentFiles />
      <customAttributes />
    </autoUpdate>
    <applications>
      <application name="" id="installer" customizedId="" beanClass="com.install4j.runtime.beans.applications.InstallerApplication" enabled="true" commentSet="false" comment="" actionElevationType="none" fileset="" customIcnsFile="" customIcoFile="" macEntitlementsFile="" automaticLauncherIntegration="false" launchMode="startupFirstWindow" launchInNewProcess="false" launchSchedule="updateSchedule" allLaunchers="true">
        <serializedBean>
          <java class="java.beans.XMLDecoder">
            <object class="com.install4j.runtime.beans.applications.InstallerApplication">
              <void property="customIconImageFiles">
                <void method="add">
                  <object class="com.install4j.api.beans.ExternalFile">
                    <string>${compiler:resourcedir}/loadui-logo-icon-16.png</string>
                  </object>
                </void>
                <void method="add">
                  <object class="com.install4j.api.beans.ExternalFile">
                    <string>${compiler:resourcedir}/loadui-logo-icon-32.png</string>
                  </object>
                </void>
              </void>
              <void property="frameSizeClientArea">
                <boolean>false</boolean>
              </void>
              <void property="resizable">
                <boolean>false</boolean>
              </void>
              <void property="useCustomIcon">
                <boolean>true</boolean>
              </void>
            </object>
          </java>
        </serializedBean>
        <launcherIds />
        <variables />
        <startup>
          <screen name="" id="1" customizedId="" beanClass="com.install4j.runtime.beans.screens.StartupScreen" enabled="true" commentSet="false" comment="" actionElevationType="inherit" rollbackBarrier="false" backButton="2" finishScreen="false" wizardIndexChangeType="unchanged" wizardIndexKey="">
            <serializedBean>
              <java class="java.beans.XMLDecoder">
                <object class="com.install4j.runtime.beans.screens.StartupScreen" />
              </java>
            </serializedBean>
            <condition />
            <validation />
            <preActivation />
            <postActivation />
            <actions>
              <action name="" id="1294" customizedId="" beanClass="com.install4j.runtime.beans.actions.misc.RequestPrivilegesAction" enabled="true" commentSet="false" comment="" actionElevationType="none" rollbackBarrier="false" multiExec="false" failureStrategy="1" errorMessage="">
                <serializedBean>
                  <java class="java.beans.XMLDecoder">
                    <object class="com.install4j.runtime.beans.actions.misc.RequestPrivilegesAction" />
                  </java>
                </serializedBean>
                <condition />
              </action>
            </actions>
            <formComponents />
          </screen>
        </startup>
        <screens>
          <screen name="" id="2" customizedId="" beanClass="com.install4j.runtime.beans.screens.WelcomeScreen" enabled="true" commentSet="false" comment="" actionElevationType="inherit" rollbackBarrier="false" backButton="2" finishScreen="false" wizardIndexChangeType="unchanged" wizardIndexKey="">
            <serializedBean>
              <java class="java.beans.XMLDecoder">
                <object class="com.install4j.runtime.beans.screens.WelcomeScreen">
                  <void property="bannerImageFile">
                    <object class="com.install4j.api.beans.ExternalFile">
                      <string>${compiler:resourcedir}/Installer_pic_loadUI_PNG.png</string>
                    </object>
                  </void>
                </object>
              </java>
            </serializedBean>
            <condition />
            <validation />
            <preActivation />
            <postActivation />
            <actions>
              <action name="" id="1295" customizedId="" beanClass="com.install4j.runtime.beans.actions.misc.LoadResponseFileAction" enabled="true" commentSet="false" comment="" actionElevationType="inherit" rollbackBarrier="false" multiExec="true" failureStrategy="1" errorMessage="">
                <serializedBean>
                  <java class="java.beans.XMLDecoder">
                    <object class="com.install4j.runtime.beans.actions.misc.LoadResponseFileAction" />
                  </java>
                </serializedBean>
                <condition>context.getBooleanVariable("sys.confirmedUpdateInstallation")</condition>
              </action>
            </actions>
            <formComponents />
          </screen>
          <screen name="" id="376" customizedId="" beanClass="com.install4j.runtime.beans.screens.LicenseScreen" enabled="true" commentSet="false" comment="" actionElevationType="inherit" rollbackBarrier="false" backButton="2" finishScreen="false" wizardIndexChangeType="unchanged" wizardIndexKey="">
            <serializedBean>
              <java class="java.beans.XMLDecoder">
                <object class="com.install4j.runtime.beans.screens.LicenseScreen">
                  <void property="displayedText">
                    <string>SmartBear Software End User License Agreement

IMPORTANT: This software end user license agreement ("EULA") is a legal agreement between you and SmartBear Software Corporation. Please read it carefully before completing the installation process and using the Software. It provides a license to use the Software and contains warranty information and liability disclaimers. By installing and using the Software, you are confirming your acceptance of the software and agreeing to become bound by the terms of this agreement. If you do not agree with the terms of this EULA, do not install or use the Software. This EULA shall apply only to the Software supplied by SmartBear Software Corporation herewith regardless of whether other software is referred to or described herein. The terms also apply to any SmartBear Software updates, supplements, Internet-based services, and support services for this software, unless other terms accompany those items. If so, those terms apply.

1. Definitions

1.1 "SmartBear" means SmartBear Software AB and its licensors, if any.

1.2 "Add-on" means a separate component which works in conjunction with SmartBear products to provide additional or enhanced functionality. Add-ons include, but are not limited to, plug-ins, macros, extensions and libraries. 

1.3 "Software" means only the licensed SmartBear software program(s), Add-ons, and third party software programs supplied by SmartBear and corresponding documentation, online or electronic documentation, and, if any, associated media and printed materials. 

2. License Grants 
The licenses granted in this section are subject to the terms and conditions set forth in this EULA. 

2.1 Upon your acceptance of this Agreement SmartBear grants you a non-exclusive, non-transferable (except as provided below), limited license to install and use the Software on compatible devices. You may install and use the Software as permitted by the license type purchased described in this end user license agreement. The license type purchased is specified in the product receipt or invoice.

2.2 License Types 

2.2.1 Node-Locked License: Under the terms of a Node-Locked License, the Software is licensed for use on one computer or computing device at a time.  This Node-Locked License will be ?bound? to this computer or computing device and will only function on this computer or computing device.  A Node-Locked License permits the use of a single instance of the Software which functions on one (1) single computer or computing device at a time.

2.2.2 Floating User License: Under the terms of a Floating User License, the Software may be used on one private network on different devices at the same time up to the number of floating seats licensed.� The number of running instances of the Software at any one time may not exceed the number of floating seats licensed.  One computer or computing device is designated as the ?license server? where the license is installed and all other users of that Floating User License will require network access to the license server from their own individual computers or computing devices.

2.2.3 Trial License: A Trial License may be used only to review, demonstrate and evaluate the Software for a limited time period.  The Trial Version of the Software may have limited features and will cease operating after a predetermined amount of time or number of uses based on an internal metering mechanism within the Trial License. 

2.2.4 Education License: Under the terms of an Education License, the Software may only be used by a student or a faculty/staff member for educational purposes while actively studying or teaching at an educational institution and for no other purpose. An Educational License may not be shared or used at the same time on different devices. Educational Licenses may not be used for commercial, professional, or for-profit purposes. 

2.2.5 Not For Resale (NFR) License: Under the terms of a Not For Resale License the Software may installed by the licensed user for the purpose of reviewing or evaluating the software only. Not for Resale Licenses may not be used for commercial, professional, or for-profit purposes. 

2.2.6 Developer Component License: Under the terms of all Developer Component Licenses the Software may be used for the sole purposes of designing, developing, testing, and deploying application programs. You may distribute royalty free copies of all files labeled as distributable within the Software's documentation. You may also freely distribute applications that you develop that are compiled with the Software. For each type of Developer Component License there are additional rights and restrictions as provided in sections 2.2.7. 

2.2.7 Developer Component Node-Locked License: A Developer Component Node-Locked License is licensed under the terms of the Node-Locked License described herein.

2.2.8 Load Testing License: Under the terms of a Load Testing License, each copy of the licensed Software utilizing virtual users for load simulation may allocate virtual users to different computers or computing devices on one specified network in your organization, provided that the total number of virtual users simultaneously simulated by the Software does not exceed the number of virtual users specified in the Load Testing License purchased for such use. 

2.2.9 Subscription License: If the Software product receipt specifies "Subscription License" then the license type is a Subscription License. The Subscription License is combined with other license types to limit the term of the license grant. The term of the Subscription License begins on the date of subscription specified in the product receipt and continues for the term specified in the product receipt. If the term is not specified in the product receipt then the term is ninety (90) days starting on the date of the receipt. The Subscription License will terminate if the Licensee fails to comply with any term or condition in this Agreement, including failure to pay associated fees when due. Licensee will not be entitled to a refund of amount paid for the license to use the Software, or any other amounts for any reason. Software with a Subscription License may contain a device that limits Software usage in accordance with the license. 

2.2.10 Freeware License:  Under the terms of a Freeware license, one individual is specifically named in the Software registration and is licensed to use the Software on one computer or computing device at a time.  The Freeware user may use the Freeware License for evaluation or production purposes.  The Freeware license is perpetual, however is not eligible for product support.

2.2.11 Open Source License: The Software may be under a separate Open Source License for which a separate license agreement is written. The Open Source license is perpetual, however is not eligible for product support.

2.3 Additional Licensing Requirements

2.3.1 Virtualization Technology: The Software may be installed within a virtual (or otherwise emulated) hardware system so long as the use of the Software meets the terms of the license type and these virtual machines are run on hardware owned or leased by you. Floating User Licenses are the only license types that can recognize virtual instances.  Virtualization technology may not be used to circumvent other licensing terms and restrictions.

2.4 Backups: Regardless of which version of the Software you have acquired, you may make one archival (backup) copy of the Software. 

2.5 Prior Versions: Prior Versions of the Software may be installed on the same computer with a properly licensed current version of Software. A Prior Version may be used by a properly licensed user in place of the current version of the software. The prior version is not an additional license of the Software; 

2.6 You agree that SmartBear may audit your use of the Software for compliance with these terms at any time, upon reasonable notice. In the event that such audit reveals any use of the Software by you other than in full compliance with the terms of this Agreement, you shall reimburse SmartBear for all reasonable expenses related to such audit in addition to any other liabilities you may incur as a result of such non-compliance. 

3. License Restrictions 
Except to the extent contrary to applicable law: 

3.1 The Software is licensed as a single product. The Software and its constituent parts, such as any provided Add-ons or other files, may not be reverse engineered, decompiled, disassembled or separated for use on more than one computer, nor placed for distribution, sale, or resale as individual creations by you. 

3.2 The provision of source code, if included with the Software, does not constitute transfer of any legal rights to such code, and resale or distribution of all or any portion of all source code and intellectual property will be prosecuted to the fullest extent of all applicable local, federal and international laws. All SmartBear Software and other files remain SmartBear's exclusive property. If source code or modifiable files are provided, regardless of any modifications that you make, you may not redistribute them unless SmartBear has expressly designated these as re-distributable. Under no circumstances may Add-ons owned and distributed by SmartBear be copied or distributed. 

3.3 Other than as expressly set forth in Section 2, you may not make or distribute copies of the Software, or electronically transfer the Software from one computer to another or over a network. 

3.4 You may not alter, merge, adapt or translate the Software, or decompile, reverse engineer, disassemble, or otherwise reduce the Software to a human-perceivable form. 

3.5 Unless otherwise provided herein, you may not rent, lease, or sublicense the Software. Unless otherwise expressly authorized in a separate written agreement between, and executed by, you and SmartBear, you may not use, or permit the use of, the Software on a timeshare or service bureau basis. In addition, unless otherwise expressly authorized in a separate written agreement between, and executed by, you and SmartBear, you may not host, on a subscription basis or otherwise, the Software to permit a third party to use the Software for any reason. 

3.6 Other than as expressly set forth in Section 2 hereof, you may not modify the Software or create derivative works based upon the Software. 

3.7 Education Versions may not be used for, or distributed to any party for, any commercial purpose. 

3.8 Unless otherwise provided herein, you shall not (A) in the aggregate, install or use more than one copy of the Trial Version of the Software, (B) download the Trial Version of the Software under more than one username, (C) alter the contents of a hard drive or computer system to enable the use of the Trial Version of the Software for an aggregate period in excess of the trial period for one license to such Trial Version, (D) disclose the results of software performance benchmarks obtained using the Trial Version to any third party without SmartBear's prior written consent, (E) use the Trial Version for any application deployment or ultimate production purpose, or (F) use the Trial Version of the Software for a purpose other than the sole purpose of determining whether to purchase a license to the Software; provided, however, notwithstanding the foregoing, you are strictly prohibited from installing or using the Trial Version of the Software for any commercial training purpose. 

3.9 You may not use the Software to create any product that directly or indirectly competes with the Software. 

3.10 You may not export the Software into any country prohibited by the United States Export Administration Act and the regulations there under. [NR1]

3.11 You may receive the Software in more than one medium but you shall only install or use one medium. Regardless of the number of media you receive, you may use only the medium that is appropriate for the device on which the Software is to be installed. 

3.13 If and only if the Software was purchased with a Floating User License: You may not permit the number of individuals simultaneously having access to the Software, its functionality or information, or content displayed or delivered using the Software, to exceed such number of floating users permitted by the license to the Software purchased by you. 

3.14 If and only if the Software was purchased with a Node-Locked License: You may permit a person authorized by you to access the Software to create, modify, store, convert, manage, or display any information on the computer or computing device on which the Node-Locked Software is installed. 

3.15 In the event that you fail to comply with this EULA, SmartBear may terminate the license and you must destroy all copies of the Software (with all other rights of both parties and all other provisions of this EULA surviving any such termination). 

4. Upgrades and Bundles 
If this copy of the Software is an upgrade from an earlier version of the Software, it is provided to you on a license exchange basis. You agree by your installation and use of such copy of the Software to voluntarily terminate your earlier EULA and that you will not transfer the earlier version of the Software to another person or entity unless such transfer is pursuant to Section 5.

5. Limited Transfer Rights 
Notwithstanding the foregoing, you may transfer all your rights to use the Software to another person or legal entity provided that: (a) you also transfer each instance of this Agreement, the Software and all other software or hardware bundled or pre-installed with the Software, including all copies, updates and prior versions to such person or entity; (b) you retain no copies, including backups and copies stored on a computer; (c) the receiving party secures a personalized license from SmartBear; and (d) the receiving party accepts the terms and conditions of this Agreement and any other terms and conditions upon which you legally purchased a license to the Software. Notwithstanding the foregoing, you may not transfer trial, education, pre-release, or not-for-resale copies of the Software. 

6. Support Services 
SmartBear may provide you with support services related to the Software, for example when buying a subscription. Use of any such support services is governed by SmartBear policies and programs described in online documentation and/or other SmartBear-provided materials. 
As part of these support services, SmartBear may make available bug lists, planned feature lists, and other supplemental informational materials. SmartBear MAKES NO WARRANTY OF ANY KIND FOR THESE MATERIALS AND ASSUMES NO LIABILITY WHATSOEVER FOR DAMAGES RESULTING FROM ANY USE OF THESE MATERIALS. FURTHERMORE, YOU MAY NOT USE ANY MATERIALS PROVIDED IN THIS WAY TO SUPPORT ANY CLAIM MADE AGAINST SMARTBEAR. 
Any supplemental software code or related materials that SmartBear provides to you as part of the support services, in periodic updates to the Software or otherwise, is to be considered part of the Software and is subject to the terms and conditions of this EULA. 
With respect to any technical information you provide to SmartBear as part of the support services, SmartBear may use such information for its business purposes without restriction, including for product support and development. 
Freeware licenses are not eligible for product support services.  Freeware users may access support materials and discussion groups via the SmartBear website at www.smartbear.com.
Open Source licenses are not eligible for product support services. Open Source users may access support materials and discussion groups via the SmartBear website at www.smartbear.com.


7. Software Activation, Updates And License Metering 

7.1 License Metering: SmartBear may use license metering software to help you avoid any unintentional violation of this Agreement. The license metering software may use your internal network and Internet connection for license metering between installed versions of the Software. 

7.2 Software Activation: SmartBear's Software may use your internal network and Internet connection for the purpose of transmitting license-related data at the time of installation, registration or update to a SmartBear-operated license server and validating the authenticity of the license-related data in order to protect SmartBear against unlicensed or illegal use of the Software and to improve customer service. Activation is based on the exchange of license related data between your computer and a SmartBear-operated license server. You agree that SmartBear may use these measures and you agree to follow any applicable requirements. 

7.3 Update Notification Service: SmartBear may provide a free update notification service with the Software. An update notification service may use your internal network and Internet connection for the purpose of transmitting license-related data to a SmartBear-operated update notification server at appropriate intervals and determine if there is any update available for the Software and notify you of its availability. 

7.4 Forced Update: SmartBear may at any time discontinue support of a certain version due to 3rd party support issues and force, free of charge, a version upgrade.

7.5 Use of Data: The terms and conditions of the Privacy Policy are set out in full at http://www.smartbear.com/privacy and are incorporated by reference into this Agreement. By your acceptance of the terms of this Software License Agreement or use of the Software, you authorize the collection, use and disclosure of information collected by SmartBear for the purposes provided for in this Agreement and/or the Privacy Policy as revised from time to time. International users understand and consent to the processing of personal information in the United States for the purposes described herein. SmartBear has the right in its sole discretion to amend this provision of the Agreement and/or Privacy Policy at any time. You are encouraged to review the terms of the Privacy Policy as posted on the SmartBear Web site from time to time. 

8. Ownership
The foregoing grants of rights give you limited license to use the Software. Except as expressly provided in this Agreement, SmartBear and its suppliers retain all right, title and interest, including all copyright and intellectual property rights, in and to, the Software (as an independent work and as an underlying work serving as a basis for any improvements, modifications, derivative works, and applications you may develop), and all copies thereof. All rights not specifically granted in this EULA, including Local and International Copyrights, are reserved by SmartBear and its suppliers. 

9. Limited Warranty and Disclaimer 

9.1 Except with respect to the Sample Code, the Trial Version, and Not For Resale Version of the Software, SmartBear warrants that, for a period of thirty (30) days from the date of delivery (as evidenced by a copy of your receipt): when used with a recommended hardware configuration, the Software will perform in substantial conformance with the documentation supplied with the Software.

9.2 SMARTBEAR PROVIDES NO REMEDIES OR WARRANTIES, WHETHER EXPRESS OR IMPLIED, FOR THE SAMPLE CODE, THE TRIAL VERSION, THE NOT FOR RESALE VERSION, THE FREEWARE VERSION OR ANY PRE-RELEASE VERSIONS OF THE SOFTWARE. THE SAMPLE CODE, THE TRIAL VERSION, THE NOT FOR RESALE VERSION AND ANY PRE-RELEASE VERSIONS OF THE SOFTWARE ARE PROVIDED "AS IS".

9.3 EXCEPT AS SET FORTH IN THE FOREGOING LIMITED WARRANTY WITH RESPECT TO SOFTWARE OTHER THAN THE SAMPLE CODE AND THE TRIAL VERSION, NOT FOR RESALE VERSION AND ANY PRE-RELEASE VERSIONS, SMARTBEAR AND ITS SUPPLIERS DISCLAIM ALL OTHER WARRANTIES AND REPRESENTATIONS, WHETHER EXPRESS, IMPLIED, OR OTHERWISE, INCLUDING THE WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. ALSO, THERE IS NO WARRANTY OF NON-INFRINGEMENT AND TITLE OR QUIET ENJOYMENT. SMARTBEAR DOES NOT WARRANT THAT THE SOFTWARE IS ERROR-FREE OR WILL OPERATE WITHOUT INTERRUPTION. NO RIGHTS OR REMEDIES REFERRED TO IN ARTICLE 2A OF THE UCC WILL BE CONFERRED ON YOU UNLESS EXPRESSLY GRANTED HEREIN. THE SOFTWARE IS NOT DESIGNED, INTENDED OR LICENSED FOR USE IN HAZARDOUS ENVIRONMENTS REQUIRING FAIL-SAFE CONTROLS, INCLUDING WITHOUT LIMITATION, THE DESIGN, CONSTRUCTION, MAINTENANCE OR OPERATION OF NUCLEAR FACILITIES, AIRCRAFT NAVIGATION OR COMMUNICATION SYSTEMS, AIR TRAFFIC CONTROL, AND LIFE SUPPORT OR WEAPONS SYSTEMS. SMARTBEAR SPECIFICALLY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTY OF FITNESS FOR SUCH PURPOSES.

9.4 IF APPLICABLE LAW REQUIRES ANY WARRANTIES WITH RESPECT TO THE SOFTWARE, ALL SUCH WARRANTIES ARE LIMITED IN DURATION TO THIRTY (30) DAYS FROM THE DATE OF DELIVERY.

9.5 NO ORAL OR WRITTEN INFORMATION OR ADVICE GIVEN BY SMARTBEAR, ITS DEALERS, DISTRIBUTORS, AGENTS OR EMPLOYEES SHALL CREATE A WARRANTY OR IN ANY WAY INCREASE THE SCOPE OF ANY WARRANTY PROVIDED HEREIN.

9.6 SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OF IMPLIED WARRANTIES, SO THE ABOVE EXCLUSION MAY NOT APPLY TO YOU. THIS WARRANTY GIVES YOU SPECIFIC LEGAL RIGHTS AND YOU MAY ALSO HAVE OTHER LEGAL RIGHTS THAT VARY FROM JURISDICTION TO JURISDICTION.

10. Exclusive Remedy
Your exclusive remedy under the preceding is to return the Software to the place you acquired it, with a copy of your receipt and a description of the problem. Provided that any non-compliance with the above warranty is reported in writing to SmartBear no more than thirty (30) days following delivery to you, SmartBear will use reasonable commercial efforts to supply you with a replacement copy of the Software that substantially conforms to the documentation, provide a replacement for defective media, or refund to you your purchase price for the Software, at its option. SmartBear shall have no responsibility if the Software has been altered in any way, if the media has been damaged by misuse, accident, abuse, modification or misapplication, or if the failure arises out of use of the Software with other than a recommended hardware configuration. Any such misuse, accident, abuse, modification or misapplication of the Software will void the warranty above. THIS REMEDY IS THE SOLE AND EXCLUSIVE REMEDY AVAILABLE TO YOU FOR BREACH OF EXPRESS OR IMPLIED WARRANTIES WITH RESPECT TO THE SOFTWARE AND RELATED DOCUMENTATION.

11. LIMITATION OF LIABILITY

11.1 NEITHER SMARTBEAR NOR ITS SUPPLIERS SHALL BE LIABLE TO YOU OR ANY THIRD PARTY FOR ANY INDIRECT, SPECIAL, INCIDENTAL, PUNITIVE, COVER OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, DAMAGES FOR THE INABILITY TO USE EQUIPMENT OR ACCESS DATA, LOSS OF BUSINESS, LOSS OF PROFITS, BUSINESS INTERRUPTION OR THE LIKE), ARISING OUT OF THE USE OF, OR INABILITY TO USE, THE SOFTWARE AND BASED ON ANY THEORY OF LIABILITY INCLUDING BREACH OF CONTRACT, BREACH OF WARRANTY, TORT (INCLUDING NEGLIGENCE), PRODUCT LIABILITY OR OTHERWISE, EVEN IF SMARTBEAR OR ITS REPRESENTATIVES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES AND EVEN IF A REMEDY SET FORTH HEREIN IS FOUND TO HAVE FAILED OF ITS ESSENTIAL PURPOSE.

11.2 SMARTBEAR'S TOTAL LIABILITY TO YOU FOR ACTUAL DAMAGES FOR ANY CAUSE WHATSOEVER WILL BE LIMITED TO THE AMOUNT PAID BY YOU FOR THE SOFTWARE THAT CAUSED SUCH DAMAGE.

11.3 SOME JURISDICTIONS DO NOT ALLOW THE LIMITATION OR EXCLUSION OF LIABILITY FOR INCIDENTAL OR CONSEQUENTIAL DAMAGES, SO THE ABOVE LIMITATION OR EXCLUSION MAY NOT APPLY TO YOU AND YOU MAY ALSO HAVE OTHER LEGAL RIGHTS THAT VARY FROM STATE/JURISDICTION TO STATE/JURISDICTION.

11.4 THE FOREGOING LIMITATIONS ON LIABILITY ARE INTENDED TO APPLY TO THE WARRANTIES AND DISCLAIMERS ABOVE AND ALL OTHER ASPECTS OF THIS EULA.

12. Basis of Bargain
The Limited Warranty and Disclaimer, Exclusive Remedies and Limitation of Liability set forth above are fundamental elements of the basis of the agreement between SmartBear and you. SmartBear would not be able to provide the Software on an economic basis without such limitations. Such Limited Warranty and Disclaimer, Exclusive Remedies and Limitation of Liability inure to the benefit of SmartBear's licensors.

13. U.S. GOVERNMENT RESTRICTED RIGHTS LEGEND
The Software and all provided files, regardless of state of compilation, are provided with RESTRICTED RIGHTS. Without limiting the foregoing, use, duplication, or disclosure by the U.S. Government is subject to restrictions as set forth in this EULA and as provided in subparagraph (c) (1) (ii) of the Rights in Technical Data and Computer Software clause at DFARS 252.227-7013 or subparagraphs (c) (1) and (2) of the Commercial Computer SOFTWARE Restricted Rights at 48 CFR 52.227-19, as applicable. Manufacturer: SmartBear Software Corp., 100 Cummings Center, Suite 234N, Beverly, MA 01915. 

14. (Outside of the Sweden) Consumer End Users Only
The limitations or exclusions of warranties and liability contained in this EULA do not affect or prejudice the statutory rights of a consumer, i.e., a person acquiring goods otherwise than in the course of a business.
The limitations or exclusions of warranties, remedies or liability contained in this EULA shall apply to you only to the extent such limitations or exclusions are permitted under the laws of the jurisdiction where you are located. 

15. Third Party Software
The Software may contain third party software which requires notices and/or additional terms and conditions. Such required third party software notices and/or additional terms and conditions are located at http://www.smartbear.com/thirdparty/ and are made a part of and incorporated by reference into this EULA. By accepting this EULA, you are also accepting the additional terms and conditions, if any, set forth therein. 

16. Marketing
You agree to be identified as a customer of SmartBear and agree that SmartBear may refer to you by name, trade name and trademark, if applicable, and may briefly describe your business in SmartBear's marketing materials and web site. You hereby grant SmartBear a license to use your name and any of your trade names and trademarks solely in connection with the rights granted to SmartBear pursuant to this marketing section. 

17. Intellectual Property Rights
If the licensed right of use for the Software is purchased by you with an intent to reverse engineer, decompile, or illegally transfer any intellectual property, trade secrets, including any exposed methods or source code where provided, no right of use shall exist, and any products created as a result shall be judged illegal by definition of all applicable law. Any sale or resale of intellectual property or created derivatives so obtained will be prosecuted to the fullest extent of all local, federal and international law.

18. General

18.1 This EULA shall be governed by the internal laws of the Sweden, without giving effect to principles of conflict of laws. You hereby consent to the exclusive jurisdiction and venue of the courts sitting in Sweden or the courts of Sweden to resolve any disputes arising under this EULA. In each case this EULA shall be construed and enforced without regard to the United Nations Convention on the International Sale of Goods.

18.2 If this Software was acquired outside the Sweden, then you agree and ascend to the adherence to all applicable international treaties regarding copyright and intellectual property rights which shall also apply. In addition, you agree that any local laws to the benefit and protection of SmartBear?s ownership of, and interest in, its intellectual property and rights of recovery for damages thereto will also apply.

18.3 This EULA contains the complete agreement between the parties with respect to the subject matter hereof, and supersedes all prior or contemporaneous agreements or understandings, whether oral or written. You agree that any varying or additional terms contained in any purchase order or other written notification or document issued by you in relation to the Software licensed hereunder shall be of no effect. The failure or delay of SmartBear to exercise any of its rights under this EULA or upon any breach of this EULA shall not be deemed a waiver of those rights or of the breach.

18.4 No SmartBear dealer, agent or employee is authorized to make any amendment to this EULA.

18.5 If any provision of this Agreement shall be held by a court of competent jurisdiction to be contrary to law that provision will be enforced to the maximum extent permissible and the remaining provisions of this Agreement will remain in full force and effect.

18.6 A waiver by either party of any term or condition of this EULA or any breach thereof, in any one instance, shall not waive such term or condition or any subsequent breach thereof.

18.7 SmartBear and other trademarks contained in the Software are trademarks or registered trademarks of SmartBear Software Corp. in the United States and/or other countries. Third party trademarks, trade names, product names and logos may be the trademarks or registered trademarks of their respective owners. You may not remove or alter any trademark, trade names, product names, logo, copyright or other proprietary notices, legends, symbols or labels in the Software. This EULA does not authorize you to use SmartBear's or its licensors' names or any of their respective trademarks. 
Should you have any questions concerning this EULA, or if you desire to contact SmartBear Software Corporation for any reason, please contact us directly in the United States of America, phone: +1 (978) 236-7900, write: SMARTBEAR SOFTWARE CORPORATION, 100 Cummings Center, Suite 234N, Beverly, MA 01915 or email: sales@smartbear.com.</string>
                  </void>
                  <void property="textSource">
                    <object class="com.install4j.runtime.beans.screens.components.TextSource" field="DIRECT" />
                  </void>
                </object>
              </java>
            </serializedBean>
            <condition />
            <validation />
            <preActivation />
            <postActivation />
            <actions />
            <formComponents />
          </screen>
          <screen name="" id="3" customizedId="" beanClass="com.install4j.runtime.beans.screens.InstallationDirectoryScreen" enabled="true" commentSet="false" comment="" actionElevationType="inherit" rollbackBarrier="false" backButton="2" finishScreen="false" wizardIndexChangeType="unchanged" wizardIndexKey="">
            <serializedBean>
              <java class="java.beans.XMLDecoder">
                <object class="com.install4j.runtime.beans.screens.InstallationDirectoryScreen" />
              </java>
            </serializedBean>
            <condition>!context.getBooleanVariable("sys.confirmedUpdateInstallation")</condition>
            <validation />
            <preActivation />
            <postActivation />
            <actions>
              <action name="" id="4" customizedId="" beanClass="com.install4j.runtime.beans.actions.misc.LoadResponseFileAction" enabled="true" commentSet="false" comment="" actionElevationType="inherit" rollbackBarrier="false" multiExec="true" failureStrategy="1" errorMessage="">
                <serializedBean>
                  <java class="java.beans.XMLDecoder">
                    <object class="com.install4j.runtime.beans.actions.misc.LoadResponseFileAction">
                      <void property="excludedVariables">
                        <array class="java.lang.String" length="1">
                          <void index="0">
                            <string>sys.installationDir</string>
                          </void>
                        </array>
                      </void>
                    </object>
                  </java>
                </serializedBean>
                <condition>context.getVariable("sys.responseFile") == null</condition>
              </action>
            </actions>
            <formComponents />
          </screen>
          <screen name="" id="5" customizedId="" beanClass="com.install4j.runtime.beans.screens.ComponentsScreen" enabled="true" commentSet="false" comment="" actionElevationType="inherit" rollbackBarrier="false" backButton="2" finishScreen="false" wizardIndexChangeType="unchanged" wizardIndexKey="">
            <serializedBean>
              <java class="java.beans.XMLDecoder">
                <object class="com.install4j.runtime.beans.screens.ComponentsScreen" />
              </java>
            </serializedBean>
            <condition />
            <validation />
            <preActivation />
            <postActivation />
            <actions />
            <formComponents />
          </screen>
          <screen name="" id="6" customizedId="" beanClass="com.install4j.runtime.beans.screens.StandardProgramGroupScreen" enabled="true" commentSet="false" comment="" actionElevationType="inherit" rollbackBarrier="false" backButton="2" finishScreen="false" wizardIndexChangeType="unchanged" wizardIndexKey="">
            <serializedBean>
              <java class="java.beans.XMLDecoder">
                <object class="com.install4j.runtime.beans.screens.StandardProgramGroupScreen">
                  <void property="programGroupName">
                    <string>SmartBear\${compiler:sys.fullName}</string>
                  </void>
                </object>
              </java>
            </serializedBean>
            <condition>!context.getBooleanVariable("sys.confirmedUpdateInstallation")</condition>
            <validation />
            <preActivation />
            <postActivation />
            <actions />
            <formComponents />
          </screen>
          <screen name="" id="7" customizedId="" beanClass="com.install4j.runtime.beans.screens.InstallationScreen" enabled="true" commentSet="false" comment="" actionElevationType="inherit" rollbackBarrier="true" backButton="2" finishScreen="false" wizardIndexChangeType="unchanged" wizardIndexKey="">
            <serializedBean>
              <java class="java.beans.XMLDecoder">
                <object class="com.install4j.runtime.beans.screens.InstallationScreen" />
              </java>
            </serializedBean>
            <condition />
            <validation />
            <preActivation />
            <postActivation />
            <actions>
              <action name="" id="891" customizedId="" beanClass="com.install4j.runtime.beans.actions.UninstallPreviousAction" enabled="true" commentSet="false" comment="" actionElevationType="none" rollbackBarrier="false" multiExec="false" failureStrategy="1" errorMessage="">
                <serializedBean>
                  <java class="java.beans.XMLDecoder">
                    <object class="com.install4j.runtime.beans.actions.UninstallPreviousAction" />
                  </java>
                </serializedBean>
                <condition />
              </action>
              <action name="" id="8" customizedId="" beanClass="com.install4j.runtime.beans.actions.InstallFilesAction" enabled="true" commentSet="false" comment="" actionElevationType="elevated" rollbackBarrier="false" multiExec="false" failureStrategy="2" errorMessage="${i18n:FileCorrupted}">
                <serializedBean>
                  <java class="java.beans.XMLDecoder">
                    <object class="com.install4j.runtime.beans.actions.InstallFilesAction" />
                  </java>
                </serializedBean>
                <condition />
              </action>
              <action name="" id="9" customizedId="" beanClass="com.install4j.runtime.beans.actions.desktop.CreateProgramGroupAction" enabled="true" commentSet="false" comment="" actionElevationType="elevated" rollbackBarrier="false" multiExec="false" failureStrategy="1" errorMessage="">
                <serializedBean>
                  <java class="java.beans.XMLDecoder">
                    <object class="com.install4j.runtime.beans.actions.desktop.CreateProgramGroupAction">
                      <void property="uninstallerMenuName">
                        <string>${i18n:UninstallerMenuEntry(${compiler:sys.fullName})}</string>
                      </void>
                    </object>
                  </java>
                </serializedBean>
                <condition>!context.getBooleanVariable("sys.programGroupDisabled")</condition>
              </action>
              <action name="" id="10" customizedId="" beanClass="com.install4j.runtime.beans.actions.desktop.RegisterAddRemoveAction" enabled="true" commentSet="false" comment="" actionElevationType="elevated" rollbackBarrier="false" multiExec="false" failureStrategy="1" errorMessage="">
                <serializedBean>
                  <java class="java.beans.XMLDecoder">
                    <object class="com.install4j.runtime.beans.actions.desktop.RegisterAddRemoveAction">
                      <void property="icon">
                        <object class="com.install4j.api.beans.ExternalFile">
                          <string>${installer:sys.installationDir}/loadUI_icon_win.ico</string>
                        </object>
                      </void>
                      <void property="itemName">
                        <string>${compiler:sys.fullName}</string>
                      </void>
                    </object>
                  </java>
                </serializedBean>
                <condition />
              </action>
              <action name="" id="344" customizedId="" beanClass="com.install4j.runtime.beans.actions.files.MoveFileAction" enabled="true" commentSet="false" comment="" actionElevationType="elevated" rollbackBarrier="false" multiExec="false" failureStrategy="3" errorMessage="Unable to create keystore. Continue with installation?">
                <serializedBean>
                  <java class="java.beans.XMLDecoder">
                    <object class="com.install4j.runtime.beans.actions.files.MoveFileAction">
                      <void property="destinationFile">
                        <object class="java.io.File">
                          <string>${installer:sys.userHome}/.loadui/keystore.jks</string>
                        </object>
                      </void>
                      <void property="files">
                        <array class="java.io.File" length="1">
                          <void index="0">
                            <object class="java.io.File">
                              <string>keystore.jks</string>
                            </object>
                          </void>
                        </array>
                      </void>
                      <void property="overwriteMode">
                        <object class="com.install4j.api.context.OverwriteMode" field="IF_NEWER" />
                      </void>
                    </object>
                  </java>
                </serializedBean>
                <condition />
              </action>
              <action name="" id="533" customizedId="" beanClass="com.install4j.runtime.beans.actions.files.MoveFileAction" enabled="true" commentSet="false" comment="" actionElevationType="elevated" rollbackBarrier="false" multiExec="false" failureStrategy="1" errorMessage="">
                <serializedBean>
                  <java class="java.beans.XMLDecoder">
                    <object class="com.install4j.runtime.beans.actions.files.MoveFileAction">
                      <void property="destinationFile">
                        <object class="java.io.File">
                          <string>${installer:sys.userHome}/.loadui/.groovy</string>
                        </object>
                      </void>
                      <void property="files">
                        <array class="java.io.File" length="1">
                          <void index="0">
                            <object class="java.io.File">
                              <string>.groovy</string>
                            </object>
                          </void>
                        </array>
                      </void>
                    </object>
                  </java>
                </serializedBean>
                <condition />
              </action>
              <action name="" id="1237" customizedId="" beanClass="com.install4j.runtime.beans.actions.files.CopyFileAction" enabled="true" commentSet="false" comment="" actionElevationType="elevated" rollbackBarrier="false" multiExec="false" failureStrategy="1" errorMessage="">
                <serializedBean>
                  <java class="java.beans.XMLDecoder">
                    <object class="com.install4j.runtime.beans.actions.files.CopyFileAction">
                      <void property="destinationFile">
                        <object class="java.io.File">
                          <string>${installer:sys.userHome}/.loadui/workspace.xml</string>
                        </object>
                      </void>
                      <void property="files">
                        <array class="java.io.File" length="1">
                          <void index="0">
                            <object class="java.io.File">
                              <string>samples/workspace.xml</string>
                            </object>
                          </void>
                        </array>
                      </void>
                      <void property="overwriteMode">
                        <object class="com.install4j.api.context.OverwriteMode" field="NEVER" />
                      </void>
                      <void property="uninstallMode">
                        <object class="com.install4j.api.context.UninstallMode" field="NEVER" />
                      </void>
                    </object>
                  </java>
                </serializedBean>
                <condition />
              </action>
              <action name="" id="669" customizedId="" beanClass="com.install4j.runtime.beans.actions.files.DeleteFileAction" enabled="true" commentSet="false" comment="" actionElevationType="elevated" rollbackBarrier="false" multiExec="false" failureStrategy="1" errorMessage="">
                <serializedBean>
                  <java class="java.beans.XMLDecoder">
                    <object class="com.install4j.runtime.beans.actions.files.DeleteFileAction">
                      <void property="files">
                        <array class="java.io.File" length="1">
                          <void index="0">
                            <object class="java.io.File">
                              <string>*.bat</string>
                            </object>
                          </void>
                        </array>
                      </void>
                    </object>
                  </java>
                </serializedBean>
                <condition>"${compiler:sys.platform}" == "macos" || "${compiler:sys.platform}" == "unix"</condition>
              </action>
              <action name="" id="670" customizedId="" beanClass="com.install4j.runtime.beans.actions.files.DeleteFileAction" enabled="true" commentSet="false" comment="" actionElevationType="elevated" rollbackBarrier="false" multiExec="false" failureStrategy="1" errorMessage="">
                <serializedBean>
                  <java class="java.beans.XMLDecoder">
                    <object class="com.install4j.runtime.beans.actions.files.DeleteFileAction">
                      <void property="files">
                        <array class="java.io.File" length="1">
                          <void index="0">
                            <object class="java.io.File">
                              <string>*.sh</string>
                            </object>
                          </void>
                        </array>
                      </void>
                    </object>
                  </java>
                </serializedBean>
                <condition>"${compiler:sys.platform}" == "macos" || "${compiler:sys.platform}" == "windows"</condition>
              </action>
              <action name="" id="1089" customizedId="" beanClass="com.install4j.runtime.beans.actions.desktop.CreateDesktopLinkAction" enabled="true" commentSet="false" comment="" actionElevationType="elevated" rollbackBarrier="false" multiExec="false" failureStrategy="1" errorMessage="">
                <serializedBean>
                  <java class="java.beans.XMLDecoder">
                    <object class="com.install4j.runtime.beans.actions.desktop.CreateDesktopLinkAction">
                      <void property="file">
                        <object class="java.io.File">
                          <string>loadUI-Pro-${compiler:version}</string>
                        </object>
                      </void>
                      <void property="name">
                        <string>${compiler:sys.fullName}</string>
                      </void>
                    </object>
                  </java>
                </serializedBean>
                <condition>context.getBooleanVariable("createDesktopLinkAction")</condition>
              </action>
            </actions>
            <formComponents />
          </screen>
          <screen name="" id="11" customizedId="" beanClass="com.install4j.runtime.beans.screens.FinishedScreen" enabled="true" commentSet="false" comment="" actionElevationType="inherit" rollbackBarrier="false" backButton="2" finishScreen="true" wizardIndexChangeType="unchanged" wizardIndexKey="">
            <serializedBean>
              <java class="java.beans.XMLDecoder">
                <object class="com.install4j.runtime.beans.screens.FinishedScreen">
                  <void property="bannerImageFile">
                    <object class="com.install4j.api.beans.ExternalFile">
                      <string>${compiler:resourcedir}/Installer_pic_loadUI_PNG.png</string>
                    </object>
                  </void>
                </object>
              </java>
            </serializedBean>
            <condition />
            <validation />
            <preActivation />
            <postActivation />
            <actions>
              <action name="" id="1099" customizedId="" beanClass="com.install4j.runtime.beans.actions.finish.ExecuteLauncherAction" enabled="false" commentSet="false" comment="" actionElevationType="none" rollbackBarrier="false" multiExec="false" failureStrategy="1" errorMessage="">
                <serializedBean>
                  <java class="java.beans.XMLDecoder">
                    <object class="com.install4j.runtime.beans.actions.finish.ExecuteLauncherAction">
                      <void property="launcherId">
                        <string>1014</string>
                      </void>
                    </object>
                  </java>
                </serializedBean>
                <condition>context.getBooleanVariable("executeLauncherAction") &amp;&amp; (!context.isUnattended())</condition>
              </action>
            </actions>
            <formComponents>
              <formComponent name="" id="573" customizedId="" beanClass="com.install4j.runtime.beans.formcomponents.HyperlinkLabelComponent" enabled="true" commentSet="false" comment="" insetTop="" insetLeft="" insetBottom="" insetRight="" resetInitOnPrevious="false">
                <serializedBean>
                  <java class="java.beans.XMLDecoder">
                    <object class="com.install4j.runtime.beans.formcomponents.HyperlinkLabelComponent">
                      <void property="hyperlinkText">
                        <string>Read about how to get started with LoadUI Pro</string>
                      </void>
                      <void property="url">
                        <string>http://loadui.org/Getting-Started-with-loadUI/your-first-load-test.html</string>
                      </void>
                    </object>
                  </java>
                </serializedBean>
                <initScript />
                <visibilityScript />
              </formComponent>
              <formComponent name="Execute launcher" id="1100" customizedId="" beanClass="com.install4j.runtime.beans.formcomponents.CheckboxComponent" enabled="false" commentSet="false" comment="" insetTop="" insetLeft="" insetBottom="" insetRight="" resetInitOnPrevious="false">
                <serializedBean>
                  <java class="java.beans.XMLDecoder">
                    <object class="com.install4j.runtime.beans.formcomponents.CheckboxComponent">
                      <void property="checkboxText">
                        <string>${i18n:RunEntryExec("${compiler:sys.fullName}")}</string>
                      </void>
                      <void property="initiallySelected">
                        <boolean>true</boolean>
                      </void>
                      <void property="variableName">
                        <string>executeLauncherAction</string>
                      </void>
                    </object>
                  </java>
                </serializedBean>
                <initScript />
                <visibilityScript />
              </formComponent>
            </formComponents>
          </screen>
        </screens>
      </application>
      <application name="" id="uninstaller" customizedId="" beanClass="com.install4j.runtime.beans.applications.UninstallerApplication" enabled="true" commentSet="false" comment="" actionElevationType="none" fileset="" customIcnsFile="" customIcoFile="" macEntitlementsFile="" automaticLauncherIntegration="false" launchMode="startupFirstWindow" launchInNewProcess="false" launchSchedule="updateSchedule" allLaunchers="true">
        <serializedBean>
          <java class="java.beans.XMLDecoder">
            <object class="com.install4j.runtime.beans.applications.UninstallerApplication">
              <void property="frameSizeClientArea">
                <boolean>false</boolean>
              </void>
            </object>
          </java>
        </serializedBean>
        <launcherIds />
        <variables />
        <startup>
          <screen name="" id="12" customizedId="" beanClass="com.install4j.runtime.beans.screens.StartupScreen" enabled="true" commentSet="false" comment="" actionElevationType="inherit" rollbackBarrier="false" backButton="2" finishScreen="false" wizardIndexChangeType="unchanged" wizardIndexKey="">
            <serializedBean>
              <java class="java.beans.XMLDecoder">
                <object class="com.install4j.runtime.beans.screens.StartupScreen" />
              </java>
            </serializedBean>
            <condition />
            <validation />
            <preActivation />
            <postActivation />
            <actions>
              <action name="" id="18" customizedId="" beanClass="com.install4j.runtime.beans.actions.misc.LoadResponseFileAction" enabled="true" commentSet="false" comment="" actionElevationType="inherit" rollbackBarrier="false" multiExec="false" failureStrategy="1" errorMessage="">
                <serializedBean>
                  <java class="java.beans.XMLDecoder">
                    <object class="com.install4j.runtime.beans.actions.misc.LoadResponseFileAction" />
                  </java>
                </serializedBean>
                <condition />
              </action>
              <action name="" id="1296" customizedId="" beanClass="com.install4j.runtime.beans.actions.misc.RequireInstallerPrivilegesAction" enabled="true" commentSet="false" comment="" actionElevationType="none" rollbackBarrier="false" multiExec="false" failureStrategy="1" errorMessage="">
                <serializedBean>
                  <java class="java.beans.XMLDecoder">
                    <object class="com.install4j.runtime.beans.actions.misc.RequireInstallerPrivilegesAction" />
                  </java>
                </serializedBean>
                <condition />
              </action>
            </actions>
            <formComponents />
          </screen>
        </startup>
        <screens>
          <screen name="" id="828" customizedId="" beanClass="com.install4j.runtime.beans.screens.CustomizableInfoScreen" enabled="true" commentSet="false" comment="" actionElevationType="inherit" rollbackBarrier="false" backButton="2" finishScreen="true" wizardIndexChangeType="unchanged" wizardIndexKey="">
            <serializedBean>
              <java class="java.beans.XMLDecoder">
                <object class="com.install4j.runtime.beans.screens.CustomizableInfoScreen">
                  <void property="displayedText">
                    <string>A version of LoadUI is running, please close it before starting the uninstallation again.</string>
                  </void>
                  <void property="textSource">
                    <object class="com.install4j.runtime.beans.screens.components.TextSource" field="DIRECT" />
                  </void>
                </object>
              </java>
            </serializedBean>
            <condition>File f = new File("${installer:sys.userHome}/.loadui/controller-cache/loadui.lock");
return f.exists();</condition>
            <validation />
            <preActivation />
            <postActivation />
            <actions />
            <formComponents />
          </screen>
          <screen name="" id="13" customizedId="" beanClass="com.install4j.runtime.beans.screens.UninstallWelcomeScreen" enabled="true" commentSet="false" comment="" actionElevationType="inherit" rollbackBarrier="false" backButton="2" finishScreen="false" wizardIndexChangeType="unchanged" wizardIndexKey="">
            <serializedBean>
              <java class="java.beans.XMLDecoder">
                <object class="com.install4j.runtime.beans.screens.UninstallWelcomeScreen">
                  <void property="bannerImageFile">
                    <object class="com.install4j.api.beans.ExternalFile">
                      <string>${compiler:resourcedir}/Installer_pic_loadUI_PNG.png</string>
                    </object>
                  </void>
                </object>
              </java>
            </serializedBean>
            <condition />
            <validation />
            <preActivation />
            <postActivation />
            <actions />
            <formComponents />
          </screen>
          <screen name="" id="14" customizedId="" beanClass="com.install4j.runtime.beans.screens.UninstallationScreen" enabled="true" commentSet="false" comment="" actionElevationType="inherit" rollbackBarrier="false" backButton="2" finishScreen="false" wizardIndexChangeType="unchanged" wizardIndexKey="">
            <serializedBean>
              <java class="java.beans.XMLDecoder">
                <object class="com.install4j.runtime.beans.screens.UninstallationScreen" />
              </java>
            </serializedBean>
            <condition />
            <validation />
            <preActivation />
            <postActivation />
            <actions>
              <action name="" id="861" customizedId="" beanClass="com.install4j.runtime.beans.actions.files.DeleteFileAction" enabled="true" commentSet="false" comment="" actionElevationType="elevated" rollbackBarrier="false" multiExec="false" failureStrategy="1" errorMessage="">
                <serializedBean>
                  <java class="java.beans.XMLDecoder">
                    <object class="com.install4j.runtime.beans.actions.files.DeleteFileAction">
                      <void property="files">
                        <array class="java.io.File" length="1">
                          <void index="0">
                            <object class="java.io.File">
                              <string>${installer:sys.userHome}/.loadui/.groovy</string>
                            </object>
                          </void>
                        </array>
                      </void>
                      <void property="recursive">
                        <boolean>true</boolean>
                      </void>
                    </object>
                  </java>
                </serializedBean>
                <condition />
              </action>
              <action name="" id="860" customizedId="" beanClass="com.install4j.runtime.beans.actions.files.DeleteFileAction" enabled="true" commentSet="false" comment="" actionElevationType="elevated" rollbackBarrier="false" multiExec="false" failureStrategy="1" errorMessage="">
                <serializedBean>
                  <java class="java.beans.XMLDecoder">
                    <object class="com.install4j.runtime.beans.actions.files.DeleteFileAction">
                      <void property="files">
                        <array class="java.io.File" length="1">
                          <void index="0">
                            <object class="java.io.File">
                              <string>${installer:sys.userHome}/.loadui/controller-cache</string>
                            </object>
                          </void>
                        </array>
                      </void>
                      <void property="recursive">
                        <boolean>true</boolean>
                      </void>
                    </object>
                  </java>
                </serializedBean>
                <condition />
              </action>
              <action name="" id="859" customizedId="" beanClass="com.install4j.runtime.beans.actions.files.DeleteFileAction" enabled="true" commentSet="false" comment="" actionElevationType="elevated" rollbackBarrier="false" multiExec="false" failureStrategy="1" errorMessage="">
                <serializedBean>
                  <java class="java.beans.XMLDecoder">
                    <object class="com.install4j.runtime.beans.actions.files.DeleteFileAction">
                      <void property="files">
                        <array class="java.io.File" length="1">
                          <void index="0">
                            <object class="java.io.File">
                              <string>${installer:sys.userHome}/.loadui/fileStorage</string>
                            </object>
                          </void>
                        </array>
                      </void>
                      <void property="recursive">
                        <boolean>true</boolean>
                      </void>
                    </object>
                  </java>
                </serializedBean>
                <condition />
              </action>
              <action name="" id="142" customizedId="" beanClass="com.install4j.runtime.beans.actions.files.DeleteFileAction" enabled="true" commentSet="false" comment="" actionElevationType="elevated" rollbackBarrier="false" multiExec="true" failureStrategy="3" errorMessage="">
                <serializedBean>
                  <java class="java.beans.XMLDecoder">
                    <object class="com.install4j.runtime.beans.actions.files.DeleteFileAction">
                      <void property="backupForRollback">
                        <boolean>false</boolean>
                      </void>
                      <void property="files">
                        <array class="java.io.File" length="1">
                          <void index="0">
                            <object class="java.io.File">
                              <string>felix-cache</string>
                            </object>
                          </void>
                        </array>
                      </void>
                      <void property="recursive">
                        <boolean>true</boolean>
                      </void>
                    </object>
                  </java>
                </serializedBean>
                <condition />
              </action>
              <action name="" id="15" customizedId="" beanClass="com.install4j.runtime.beans.actions.UninstallFilesAction" enabled="true" commentSet="false" comment="" actionElevationType="elevated" rollbackBarrier="false" multiExec="false" failureStrategy="1" errorMessage="">
                <serializedBean>
                  <java class="java.beans.XMLDecoder">
                    <object class="com.install4j.runtime.beans.actions.UninstallFilesAction" />
                  </java>
                </serializedBean>
                <condition />
              </action>
              <action name="" id="641" customizedId="" beanClass="com.install4j.runtime.beans.actions.files.DeleteFileAction" enabled="true" commentSet="false" comment="" actionElevationType="elevated" rollbackBarrier="false" multiExec="false" failureStrategy="1" errorMessage="">
                <serializedBean>
                  <java class="java.beans.XMLDecoder">
                    <object class="com.install4j.runtime.beans.actions.files.DeleteFileAction">
                      <void property="files">
                        <array class="java.io.File" length="1">
                          <void index="0">
                            <object class="java.io.File">
                              <string>lib</string>
                            </object>
                          </void>
                        </array>
                      </void>
                      <void property="recursive">
                        <boolean>true</boolean>
                      </void>
                    </object>
                  </java>
                </serializedBean>
                <condition />
              </action>
            </actions>
            <formComponents />
          </screen>
          <screen name="" id="17" customizedId="" beanClass="com.install4j.runtime.beans.screens.UninstallFailureScreen" enabled="true" commentSet="false" comment="" actionElevationType="inherit" rollbackBarrier="false" backButton="2" finishScreen="true" wizardIndexChangeType="unchanged" wizardIndexKey="">
            <serializedBean>
              <java class="java.beans.XMLDecoder">
                <object class="com.install4j.runtime.beans.screens.UninstallFailureScreen" />
              </java>
            </serializedBean>
            <condition />
            <validation />
            <preActivation />
            <postActivation />
            <actions />
            <formComponents />
          </screen>
          <screen name="" id="16" customizedId="" beanClass="com.install4j.runtime.beans.screens.UninstallSuccessScreen" enabled="true" commentSet="false" comment="" actionElevationType="inherit" rollbackBarrier="false" backButton="2" finishScreen="true" wizardIndexChangeType="unchanged" wizardIndexKey="">
            <serializedBean>
              <java class="java.beans.XMLDecoder">
                <object class="com.install4j.runtime.beans.screens.UninstallSuccessScreen">
                  <void property="bannerImageFile">
                    <object class="com.install4j.api.beans.ExternalFile">
                      <string>${compiler:resourcedir}/Installer_pic_loadUI_PNG.png</string>
                    </object>
                  </void>
                </object>
              </java>
            </serializedBean>
            <condition />
            <validation />
            <preActivation />
            <postActivation />
            <actions />
            <formComponents />
          </screen>
        </screens>
      </application>
    </applications>
  </installerGui>
  <mediaSets>
    <windows name="Windows Installer" id="26" customizedId="" mediaFileName="LoadUI-Pro-${compiler:version}" installDir="SmartBear/loadUI-Pro-${compiler:version}" overridePrincipalLanguage="false" jreBitType="32" runPostProcessor="true" postProcessor="${compiler:SIGNTOOL_PATH} sign /v /f ${compiler:CERT_PATH} /p ${compiler:CERT_PASS} $EXECUTABLE" failOnPostProcessorError="false" useLegacyMediaFileIds="false" legacyMediaFileIds="" includedJRE="windows-x86-1.7.0_15" manualJREEntry="false" bundleType="1" jreURL="" jreShared="false" directDownload="false" installOnlyIfNecessary="false" customInstallBaseDir="" contentFilesType="1" downloadURL="" verifyIntegrity="true">
      <excludedLaunchers>
        <launcher id="23" />
      </excludedLaunchers>
      <excludedBeans>
        <bean refId="193" />
        <bean refId="228" />
        <bean refId="274" />
      </excludedBeans>
      <overriddenPrincipalLanguage id="en" customLocalizationFile="" />
      <exclude />
      <variables />
      <autoUpdate useMinUpdatableVersion="false" minUpdatableVersion="" useMaxUpdatableVersion="false" maxUpdatableVersion="">
        <commentFiles />
        <customAttributes />
      </autoUpdate>
      <excludedComponents />
      <includedDownloadableComponents />
    </windows>
    <windows name="Windows 64-bit Installer" id="1293" customizedId="" mediaFileName="LoadUI-Pro-${compiler:version}-64bit" installDir="SmartBear/LoadUI-Pro-${compiler:version}" overridePrincipalLanguage="false" jreBitType="64" runPostProcessor="true" postProcessor="${compiler:SIGNTOOL_PATH} sign /v /f ${compiler:CERT_PATH} /p ${compiler:CERT_PASS} $EXECUTABLE" failOnPostProcessorError="false" useLegacyMediaFileIds="false" legacyMediaFileIds="" includedJRE="windows-amd64-1.7.0_15" manualJREEntry="false" bundleType="1" jreURL="" jreShared="false" directDownload="false" installOnlyIfNecessary="false" customInstallBaseDir="" contentFilesType="1" downloadURL="" verifyIntegrity="true">
      <excludedLaunchers />
      <excludedBeans />
      <overriddenPrincipalLanguage id="en" customLocalizationFile="" />
      <exclude />
      <variables />
      <autoUpdate useMinUpdatableVersion="false" minUpdatableVersion="" useMaxUpdatableVersion="false" maxUpdatableVersion="">
        <commentFiles />
        <customAttributes />
      </autoUpdate>
      <excludedComponents />
      <includedDownloadableComponents />
    </windows>
    <unixInstaller name="Unix Installer" id="25" customizedId="" mediaFileName="LoadUI-Pro-${compiler:version}" installDir="SmartBear/LoadUI-Pro-${compiler:version}" overridePrincipalLanguage="false" jreBitType="all" runPostProcessor="false" postProcessor="" failOnPostProcessorError="false" useLegacyMediaFileIds="false" legacyMediaFileIds="" includedJRE="linux-x86-1.7.0_15" manualJREEntry="false" bundleType="1" jreURL="" jreShared="false" directDownload="false" installOnlyIfNecessary="false" customInstallBaseDir="" contentFilesType="1" downloadURL="">
      <excludedLaunchers>
        <launcher id="24" />
        <launcher id="225" />
      </excludedLaunchers>
      <excludedBeans>
        <bean refId="228" />
        <bean refId="271" />
      </excludedBeans>
      <overriddenPrincipalLanguage id="en" customLocalizationFile="" />
      <exclude>
        <entry location="loadUI.bat" fileType="regular" />
      </exclude>
      <variables />
      <autoUpdate useMinUpdatableVersion="false" minUpdatableVersion="" useMaxUpdatableVersion="false" maxUpdatableVersion="">
        <commentFiles />
        <customAttributes />
      </autoUpdate>
      <excludedComponents />
      <includedDownloadableComponents />
      <installerScript mode="1" file="">
        <content />
      </installerScript>
    </unixInstaller>
    <unixInstaller name="Unix 64-bit Installer" id="1239" customizedId="" mediaFileName="LoadUI-Pro-${compiler:version}_64bit" installDir="SmartBear/LoadUI-Pro-${compiler:version}" overridePrincipalLanguage="false" jreBitType="all" runPostProcessor="false" postProcessor="" failOnPostProcessorError="false" useLegacyMediaFileIds="false" legacyMediaFileIds="" includedJRE="linux-amd64-1.7.0_15" manualJREEntry="false" bundleType="1" jreURL="" jreShared="false" directDownload="false" installOnlyIfNecessary="false" customInstallBaseDir="" contentFilesType="1" downloadURL="">
      <excludedLaunchers>
        <launcher id="24" />
        <launcher id="225" />
      </excludedLaunchers>
      <excludedBeans>
        <bean refId="228" />
        <bean refId="271" />
      </excludedBeans>
      <overriddenPrincipalLanguage id="en" customLocalizationFile="" />
      <exclude>
        <entry location="loadUI.bat" fileType="regular" />
      </exclude>
      <variables />
      <autoUpdate useMinUpdatableVersion="false" minUpdatableVersion="" useMaxUpdatableVersion="false" maxUpdatableVersion="">
        <commentFiles />
        <customAttributes />
      </autoUpdate>
      <excludedComponents />
      <includedDownloadableComponents />
      <installerScript mode="1" file="">
        <content />
      </installerScript>
    </unixInstaller>
    <macos name="Mac OS X Single Bundle" id="1087" customizedId="" mediaFileName="LoadUI-Pro-${compiler:version}" installDir="LoadUI Pro ${compiler:version}" overridePrincipalLanguage="false" jreBitType="all" runPostProcessor="false" postProcessor="" failOnPostProcessorError="false" useLegacyMediaFileIds="false" legacyMediaFileIds="" includedJRE="macosx-amd64-1.7.0_15" manualJREEntry="false" bundleType="1" jreURL="" jreShared="false" directDownload="false" installOnlyIfNecessary="false" appleJre="false" customInstallBaseDir="" contentFilesType="1" downloadURL="" signLaunchers="false" launcherId="1014">
      <excludedBeans />
      <overriddenPrincipalLanguage id="en" customLocalizationFile="" />
      <exclude>
        <entry location="loadUI-cmd-sysjvm.bat" fileType="regular" />
        <entry location="loadUI-cmd.bat" fileType="regular" />
        <entry location="loadUI-cmd.sh" fileType="regular" />
        <entry location="loadUIprofile.bat" fileType="regular" />
        <entry location="loadUItest.bat" fileType="regular" />
      </exclude>
      <variables />
      <autoUpdate useMinUpdatableVersion="false" minUpdatableVersion="" useMaxUpdatableVersion="false" maxUpdatableVersion="">
        <commentFiles />
        <customAttributes />
      </autoUpdate>
      <excludedComponents />
      <includedDownloadableComponents />
    </macos>
  </mediaSets>
  <buildIds buildAll="false">
    <mediaSet refId="25" />
  </buildIds>
  <buildOptions verbose="false" faster="false" disableSigning="false" debug="false" />
</install4j>

